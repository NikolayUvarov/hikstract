#!/usr/bin/env python3

import logging
import os

from fcntl import LOCK_EX, LOCK_NB, LOCK_UN, lockf

from config import config
from db import DB
from parser import Parser


logger = logging.getLogger(__name__)


def run():
    os.chdir(os.path.dirname(__file__))

    config.configure()
    if config.getboolean('main', 'debug'):
        level = logging.DEBUG
    else:
        level = logging.WARN

    log_fmt = '%(asctime)s [%(process)d] %(levelname)s: %(message)s'

    logging.basicConfig(format=log_fmt, level=level)

    main, advanced = config['main'], config['advanced']

    data_dir = main['data_dir']
    out_dir = main['output_dir']
    h_index_fname = advanced['h_index_file']
    db = DB(advanced['db_file'])

    lock_file = os.path.join(out_dir, '.lock')
    with open(lock_file, 'w') as lf:
        try:
            lockf(lf, LOCK_EX | LOCK_NB)
            parser = Parser(data_dir, h_index_fname, db)
            parser.update()
        except BlockingIOError:
            logger.info('Another instance is already running')
        finally:
            lockf(lf, LOCK_UN)


if __name__ == '__main__':
    run()
